module(
    name = "bazel-orfs",
    version = "0.0.1",
    compatibility_level = 1,
)

orfs = use_extension("//:extension.bzl", "orfs_repositories")
orfs.default(
    # a local only or remote docker image. Local docker images do not
    # have a sha256.
    image = "docker.io/openroad/orfs:v3.0-1679-g980de246",
    # Comment out line below for local only docker images
    sha256 = "e3c30971e63d4748fde1ddbec63f9680bda53be5a50319d67db9279dd51d2945",
)
use_repo(orfs, "com_github_nixos_patchelf_download")
use_repo(orfs, "docker_orfs")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "oss_cad_suite",
    build_file = "oss_cad_suite.BUILD.bazel",
    sha256 = "e6434197cd3a31dd90899886b0f4b92ebf1f832eb9abb3a8802e120c2ca5cc73",
    strip_prefix = "oss-cad-suite",
    urls = ["https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2024-08-28/oss-cad-suite-linux-x64-20240828.tgz"],
)

load_json_file = use_repo_rule("//:load_json_file.bzl", "load_json_file")

load_json_file(
    name = "orfs_variable_metadata",
    src = "@docker_orfs//:OpenROAD-flow-scripts/flow/scripts/variables.yaml",
    # Dummy output file, we're not actually using it
    out = "variables.json",
    script = "//:yaml_to_json.py",
)
